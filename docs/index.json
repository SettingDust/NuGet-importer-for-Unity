{
  "api/index.html": {
    "href": "api/index.html",
    "title": "English | NuGet importer for Unity documentation",
    "keywords": "English API Documentation kumaS.NuGetImporter.Editor.dll The editor extension part of this package. namespace kumaS.NuGetImporter.Editor Code for logic, UI, etc. namespace kumaS.NuGetImporter.Editor.DataClasses The structure of the data returned by the API, and the code for its util methods. kumaS.NuGetImporter.Editor.Test.dll namespace kumaS.NuGetImporter.Editor.Test Test code. 日本語 API ドキュメント このパッケージの構成についてここに記します。 kumaS.NuGetImporter.Editor.dll このパッケージのエディタ拡張部分。 namespace kumaS.NuGetImporter.Editor ロジックやUI等のコード。 namespace kumaS.NuGetImporter.Editor.DataClasses API等で返ってくるデータの構造や、その便利メソッドのコード。 kumaS.NuGetImporter.Editor.Test.dll namespace kumaS.NuGetImporter.Editor.Test テストコード。"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.APIList.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.APIList.html",
    "title": "Class APIList | NuGet importer for Unity documentation",
    "keywords": "Class APIList List of available API 利用可能なAPIの一覧 Inheritance System.Object APIList Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class APIList Fields resources Declaration public Resource[] resources Field Value Type Description Resource [] Infomation of API API情報 version Declaration public string version Field Value Type Description System.String"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Author.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Author.html",
    "title": "Class Author | NuGet importer for Unity documentation",
    "keywords": "Class Author Data about author. 作者のデータ。 Inheritance System.Object Author Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Author Fields email Declaration public string email Field Value Type Description System.String name Declaration public string name Field Value Type Description System.String url Declaration public string url Field Value Type Description System.String"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Catalog.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Catalog.html",
    "title": "Class Catalog | NuGet importer for Unity documentation",
    "keywords": "Class Catalog Catalog of package. パッケージのカタログ。 Inheritance System.Object Catalog Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Catalog Fields commitId Declaration public string commitId Field Value Type Description System.String commitTimeStamp Declaration public string commitTimeStamp Field Value Type Description System.String count Declaration public int count Field Value Type Description System.Int32 icon Declaration [NonSerialized] public Texture2D icon Field Value Type Description UnityEngine.Texture2D items Declaration public Item[] items Field Value Type Description Item [] CatalogEntrys CatalogEntryがこの中に入っている。 nuget_id Declaration public string nuget_id Field Value Type Description System.String nuget_type Declaration public string[] nuget_type Field Value Type Description System.String [] Methods GetAllCatalogEntry() Get all catalogEntry. 全てのcatalogEntryを取得する。 Declaration public Catalogentry[] GetAllCatalogEntry() Returns Type Description Catalogentry [] catalogEntrys GetAllVersion() Get all versions of catalog. 全てのバージョンを取得する。 Declaration public List<string> GetAllVersion() Returns Type Description System.Collections.Generic.List < System.String > versions Extension Methods PackageDataExtentionToGUI.GetIcon(Catalog, String)"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Catalogentry.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Catalogentry.html",
    "title": "Class Catalogentry | NuGet importer for Unity documentation",
    "keywords": "Class Catalogentry Infomation of package. パッケージのバージョンごとの情報。 Inheritance System.Object Catalogentry Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Catalogentry Fields authors Declaration public string authors Field Value Type Description System.String dependencyGroups Declaration public Dependencygroup[] dependencyGroups Field Value Type Description Dependencygroup [] description Declaration public string description Field Value Type Description System.String iconUrl Declaration public string iconUrl Field Value Type Description System.String id Declaration public string id Field Value Type Description System.String language Declaration public string language Field Value Type Description System.String licenseExpression Declaration public string licenseExpression Field Value Type Description System.String licenseUrl Declaration public string licenseUrl Field Value Type Description System.String listed Declaration public bool listed Field Value Type Description System.Boolean minClientVersion Declaration public string minClientVersion Field Value Type Description System.String nuget_id Declaration public string nuget_id Field Value Type Description System.String nuget_type Declaration public string nuget_type Field Value Type Description System.String packageContent Declaration public string packageContent Field Value Type Description System.String projectUrl Declaration public string projectUrl Field Value Type Description System.String published Declaration public string published Field Value Type Description System.String requireLicenseAcceptance Declaration public bool requireLicenseAcceptance Field Value Type Description System.Boolean summary Declaration public string summary Field Value Type Description System.String tags Declaration public string[] tags Field Value Type Description System.String [] title Declaration public string title Field Value Type Description System.String version Declaration public string version Field Value Type Description System.String Methods ToPackageJson() Declaration public PackageJson ToPackageJson() Returns Type Description PackageJson"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Datum.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Datum.html",
    "title": "Class Datum | NuGet importer for Unity documentation",
    "keywords": "Class Datum Package information returned by the search 検索で返ってくるパッケージの情報。 Inheritance System.Object Datum Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Datum Fields authors Declaration public string[] authors Field Value Type Description System.String [] description Declaration public string description Field Value Type Description System.String icon Declaration [NonSerialized] public Texture2D icon Field Value Type Description UnityEngine.Texture2D iconUrl Declaration public string iconUrl Field Value Type Description System.String id Declaration public string id Field Value Type Description System.String licenseUrl Declaration public string licenseUrl Field Value Type Description System.String nuget_id Declaration public string nuget_id Field Value Type Description System.String nuget_type Declaration public string nuget_type Field Value Type Description System.String packageTypes Declaration public Packagetype[] packageTypes Field Value Type Description Packagetype [] projectUrl Declaration public string projectUrl Field Value Type Description System.String registration Declaration public string registration Field Value Type Description System.String summary Declaration public string summary Field Value Type Description System.String tags Declaration public string[] tags Field Value Type Description System.String [] title Declaration public string title Field Value Type Description System.String totalDownloads Declaration public int totalDownloads Field Value Type Description System.Int32 verified Declaration public bool verified Field Value Type Description System.Boolean version Declaration public string version Field Value Type Description System.String versions Declaration public PackageVersionInformation[] versions Field Value Type Description PackageVersionInformation [] Methods GetAllVersion() Get all versions of catalog. 全てのバージョンを取得する。 Declaration public List<string> GetAllVersion() Returns Type Description System.Collections.Generic.List < System.String > versions Extension Methods PackageDataExtentionToGUI.GetIcon(Datum)"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Dependency.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Dependency.html",
    "title": "Class Dependency | NuGet importer for Unity documentation",
    "keywords": "Class Dependency Inheritance System.Object Dependency Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Dependency Fields id Declaration public string id Field Value Type Description System.String nuget_id Declaration public string nuget_id Field Value Type Description System.String nuget_type Declaration public string nuget_type Field Value Type Description System.String range Declaration public string range Field Value Type Description System.String registration Declaration public string registration Field Value Type Description System.String"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Dependencygroup.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Dependencygroup.html",
    "title": "Class Dependencygroup | NuGet importer for Unity documentation",
    "keywords": "Class Dependencygroup Inheritance System.Object Dependencygroup Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Dependencygroup Fields dependencies Declaration public Dependency[] dependencies Field Value Type Description Dependency [] nuget_id Declaration public string nuget_id Field Value Type Description System.String nuget_type Declaration public string nuget_type Field Value Type Description System.String targetFramework Declaration public string targetFramework Field Value Type Description System.String"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.FrameworkName.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.FrameworkName.html",
    "title": "Class FrameworkName | NuGet importer for Unity documentation",
    "keywords": "Class FrameworkName Inheritance System.Object FrameworkName Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax public static class FrameworkName Fields net40 Declaration public static readonly string[] net40 Field Value Type Description System.String [] net403 Declaration public static readonly string[] net403 Field Value Type Description System.String [] net45 Declaration public static readonly string[] net45 Field Value Type Description System.String [] net451 Declaration public static readonly string[] net451 Field Value Type Description System.String [] net452 Declaration public static readonly string[] net452 Field Value Type Description System.String [] net46 Declaration public static readonly string[] net46 Field Value Type Description System.String [] net461 Declaration public static readonly string[] net461 Field Value Type Description System.String [] net462 Declaration public static readonly string[] net462 Field Value Type Description System.String [] net47 Declaration public static readonly string[] net47 Field Value Type Description System.String [] net471 Declaration public static readonly string[] net471 Field Value Type Description System.String [] net472 Declaration public static readonly string[] net472 Field Value Type Description System.String [] net48 Declaration public static readonly string[] net48 Field Value Type Description System.String [] standard10 Declaration public static readonly string[] standard10 Field Value Type Description System.String [] standard11 Declaration public static readonly string[] standard11 Field Value Type Description System.String [] standard12 Declaration public static readonly string[] standard12 Field Value Type Description System.String [] standard13 Declaration public static readonly string[] standard13 Field Value Type Description System.String [] standard14 Declaration public static readonly string[] standard14 Field Value Type Description System.String [] standard15 Declaration public static readonly string[] standard15 Field Value Type Description System.String [] standard16 Declaration public static readonly string[] standard16 Field Value Type Description System.String [] standard20 Declaration public static readonly string[] standard20 Field Value Type Description System.String [] standard21 Declaration public static readonly string[] standard21 Field Value Type Description System.String [] Properties ALLFLATPLATFORM All framework name 全てのフレームワークの名前 Declaration public static List<string> ALLFLATPLATFORM { get; } Property Value Type Description System.Collections.Generic.List < System.String > ALLPLATFORM All framework name 全てのフレームワークの名前 Declaration public static List<string[]> ALLPLATFORM { get; } Property Value Type Description System.Collections.Generic.List < System.String []> NET4_6 Available .NETFramework4.6 or lower names 利用可能な.NETFramework4.6以下のの名前 Declaration public static List<string> NET4_6 { get; } Property Value Type Description System.Collections.Generic.List < System.String > NET4_8 Available .NETFramework4.8 or lower names 利用可能な.NETFramework4.8以下のの名前 Declaration public static List<string> NET4_8 { get; } Property Value Type Description System.Collections.Generic.List < System.String > STANDARD2_0 Available .NETStandard name 利用可能な.NETStandardの名前 Declaration public static List<string> STANDARD2_0 { get; } Property Value Type Description System.Collections.Generic.List < System.String > STANDARD2_1 Available .NETStandard2.1 or lower names 利用可能な.NETStandard2.1以下の名前 Declaration public static List<string> STANDARD2_1 { get; } Property Value Type Description System.Collections.Generic.List < System.String > TARGET List of framework names to target 対象とするフレームワーク名のリスト Declaration public static List<string> TARGET { get; } Property Value Type Description System.Collections.Generic.List < System.String > Exceptions Type Condition System.NotSupportedException Thrown when the environment is not .Net4.x equivalent. .Net4.x equivalent以外の環境のときスローされる。"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.html",
    "title": "Namespace kumaS.NuGetImporter.Editor.DataClasses | NuGet importer for Unity documentation",
    "keywords": "Namespace kumaS.NuGetImporter.Editor.DataClasses Classes APIList List of available API 利用可能なAPIの一覧 Author Data about author. 作者のデータ。 Catalog Catalog of package. パッケージのカタログ。 Catalogentry Infomation of package. パッケージのバージョンごとの情報。 Datum Package information returned by the search 検索で返ってくるパッケージの情報。 Dependency Dependencygroup FrameworkName InstalledPackages Item Item1 ManagedPluginList Package PackageJson Data about package.json. package.jsonのデータ。 PackageManagedPluginList PackageSummary Packagetype PackageVersionInformation Resource SearchResult Search results in NuGet. NuGetで検索した結果。 SemVer Simple Semantic Versioning 簡易的なセマンティックバージョニング(2.0.0) Structs OperationResult Enums InstallMethod OperationState VersionSelectMethod"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.InstalledPackages.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.InstalledPackages.html",
    "title": "Class InstalledPackages | NuGet importer for Unity documentation",
    "keywords": "Class InstalledPackages Inheritance System.Object InstalledPackages Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class InstalledPackages Properties package Declaration public Package[] package { get; set; } Property Value Type Description Package []"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.InstallMethod.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.InstallMethod.html",
    "title": "Enum InstallMethod | NuGet importer for Unity documentation",
    "keywords": "Enum InstallMethod Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax public enum InstallMethod Fields Name Description AsAssets AsUPM"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Item.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Item.html",
    "title": "Class Item | NuGet importer for Unity documentation",
    "keywords": "Class Item Inheritance System.Object Item Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Item Fields commitId Declaration public string commitId Field Value Type Description System.String commitTimeStamp Declaration public string commitTimeStamp Field Value Type Description System.String count Declaration public int count Field Value Type Description System.Int32 items Declaration public Item1[] items Field Value Type Description Item1 [] CatalogEntrys CatalogEntryがこの中に入っている。 lower Declaration public string lower Field Value Type Description System.String nuget_id Declaration public string nuget_id Field Value Type Description System.String nuget_type Declaration public string nuget_type Field Value Type Description System.String parent Declaration public string parent Field Value Type Description System.String upper Declaration public string upper Field Value Type Description System.String"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Item1.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Item1.html",
    "title": "Class Item1 | NuGet importer for Unity documentation",
    "keywords": "Class Item1 Inheritance System.Object Item1 Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Item1 Fields catalogEntry Declaration public Catalogentry catalogEntry Field Value Type Description Catalogentry CatalogEntry CatalogEntryがこの中に入っている。 commitId Declaration public string commitId Field Value Type Description System.String commitTimeStamp Declaration public string commitTimeStamp Field Value Type Description System.String nuget_id Declaration public string nuget_id Field Value Type Description System.String nuget_type Declaration public string nuget_type Field Value Type Description System.String packageContent Declaration public string packageContent Field Value Type Description System.String registration Declaration public string registration Field Value Type Description System.String"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.ManagedPluginList.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.ManagedPluginList.html",
    "title": "Class ManagedPluginList | NuGet importer for Unity documentation",
    "keywords": "Class ManagedPluginList Inheritance System.Object ManagedPluginList Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class ManagedPluginList Fields managedList Declaration public List<PackageManagedPluginList> managedList Field Value Type Description System.Collections.Generic.List < PackageManagedPluginList >"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.OperationResult.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.OperationResult.html",
    "title": "Struct OperationResult | NuGet importer for Unity documentation",
    "keywords": "Struct OperationResult Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax public struct OperationResult Constructors OperationResult(OperationState, String) Declaration public OperationResult(OperationState state, string message) Parameters Type Name Description OperationState state System.String message Properties Message Declaration public readonly string Message { get; } Property Value Type Description System.String State Declaration public readonly OperationState State { get; } Property Value Type Description OperationState"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.OperationState.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.OperationState.html",
    "title": "Enum OperationState | NuGet importer for Unity documentation",
    "keywords": "Enum OperationState Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax public enum OperationState Fields Name Description Cancel Failure Progress Success"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Package.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Package.html",
    "title": "Class Package | NuGet importer for Unity documentation",
    "keywords": "Class Package Inheritance System.Object Package Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Package Fields versionField Declaration public SemVer versionField Field Value Type Description SemVer Properties allowedVersions Declaration public string allowedVersions { get; set; } Property Value Type Description System.String id Declaration public string id { get; set; } Property Value Type Description System.String targetFramework Declaration public string targetFramework { get; set; } Property Value Type Description System.String version Declaration public string version { get; set; } Property Value Type Description System.String"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.PackageJson.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.PackageJson.html",
    "title": "Class PackageJson | NuGet importer for Unity documentation",
    "keywords": "Class PackageJson Data about package.json. package.jsonのデータ。 Inheritance System.Object PackageJson Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class PackageJson Fields author Declaration public Author author Field Value Type Description Author description Declaration public string description Field Value Type Description System.String displayName Declaration public string displayName Field Value Type Description System.String keywords Declaration public string[] keywords Field Value Type Description System.String [] name Declaration public string name Field Value Type Description System.String unity Declaration public string unity Field Value Type Description System.String version Declaration public string version Field Value Type Description System.String"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.PackageManagedPluginList.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.PackageManagedPluginList.html",
    "title": "Class PackageManagedPluginList | NuGet importer for Unity documentation",
    "keywords": "Class PackageManagedPluginList Inheritance System.Object PackageManagedPluginList Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class PackageManagedPluginList Fields fileNames Declaration public List<string> fileNames Field Value Type Description System.Collections.Generic.List < System.String > packageName Declaration public string packageName Field Value Type Description System.String"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.PackageSummary.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.PackageSummary.html",
    "title": "Class PackageSummary | NuGet importer for Unity documentation",
    "keywords": "Class PackageSummary Inheritance System.Object PackageSummary Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax public class PackageSummary Constructors PackageSummary(String, String, Texture2D, String, List<String>, String) Declaration public PackageSummary(string id, string title, Texture2D image, string selectedVersion, List<string> allVersion, string installedVersion = null) Parameters Type Name Description System.String id System.String title UnityEngine.Texture2D image System.String selectedVersion System.Collections.Generic.List < System.String > allVersion System.String installedVersion Properties AllVersion Declaration public List<string> AllVersion { get; } Property Value Type Description System.Collections.Generic.List < System.String > Image Declaration public Texture2D Image { get; } Property Value Type Description UnityEngine.Texture2D InstalledVersion Declaration public string InstalledVersion { get; set; } Property Value Type Description System.String PackageId Declaration public string PackageId { get; } Property Value Type Description System.String SelectedVersion Declaration public string SelectedVersion { get; set; } Property Value Type Description System.String StableVersion Declaration public List<string> StableVersion { get; } Property Value Type Description System.Collections.Generic.List < System.String > Title Declaration public string Title { get; } Property Value Type Description System.String"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Packagetype.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Packagetype.html",
    "title": "Class Packagetype | NuGet importer for Unity documentation",
    "keywords": "Class Packagetype Inheritance System.Object Packagetype Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Packagetype Fields name Declaration public string name Field Value Type Description System.String"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.PackageVersionInformation.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.PackageVersionInformation.html",
    "title": "Class PackageVersionInformation | NuGet importer for Unity documentation",
    "keywords": "Class PackageVersionInformation Inheritance System.Object PackageVersionInformation Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class PackageVersionInformation Fields downloads Declaration public int downloads Field Value Type Description System.Int32 nuget_id Declaration public string nuget_id Field Value Type Description System.String version Declaration public string version Field Value Type Description System.String"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Resource.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Resource.html",
    "title": "Class Resource | NuGet importer for Unity documentation",
    "keywords": "Class Resource Inheritance System.Object Resource Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Resource Fields clientVersion Declaration public string clientVersion Field Value Type Description System.String comment Declaration public string comment Field Value Type Description System.String Comment of API APIについてのコメント。説明が書いてある。 nuget_id Declaration public string nuget_id Field Value Type Description System.String Entry point of API APIのエントリーポイント。URL。 nuget_type Declaration public string nuget_type Field Value Type Description System.String"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.SearchResult.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.SearchResult.html",
    "title": "Class SearchResult | NuGet importer for Unity documentation",
    "keywords": "Class SearchResult Search results in NuGet. NuGetで検索した結果。 Inheritance System.Object SearchResult Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class SearchResult Fields data Declaration public Datum[] data Field Value Type Description Datum [] Packages found in the search 検索にヒットしたパッケージ。 totalHits Declaration public int totalHits Field Value Type Description System.Int32"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.SemVer.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.SemVer.html",
    "title": "Class SemVer | NuGet importer for Unity documentation",
    "keywords": "Class SemVer Simple Semantic Versioning 簡易的なセマンティックバージョニング(2.0.0) Inheritance System.Object SemVer Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax public class SemVer Properties AllowedVersion Declaration public string AllowedVersion { get; set; } Property Value Type Description System.String Allowed version 許可されたバージョン。 ExistVersion Declaration public List<string> ExistVersion { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > SelectedVersion Declaration public string SelectedVersion { get; set; } Property Value Type Description System.String Selected version 選択されたバージョン Exceptions Type Condition System.ArgumentException Thrown when given version is not in the exist version. 与えられたversionがexist versionの中にない場合にthrowされる。 System.IndexOutOfRangeException Thrown when given version is not allowed. 与えられたバージョンが許可されたものの中にない場合にthrowされる。 Methods GetSuitVersion(Boolean, VersionSelectMethod) Get suitable version. 最適なバージョンを取得する。 Declaration public string GetSuitVersion(bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description System.Boolean onlyStable Whether use only stable version. 安定版のみつかうか。 VersionSelectMethod method How to select a version. バージョンを選択する方法。 Returns Type Description System.String Suitable version 最適なバージョン Exceptions Type Condition System.InvalidOperationException Thrown when there is no suitable version. 最適なバージョンがないときthrowされる。 System.ArgumentException Thrown when given invalid method. 無効な選択方法が与えられたときthrowされる。 Marge(SemVer, Boolean) Return a merged version of this object and the given object. このオブジェクトと引数のオブジェクトをマージしたものを返す。 Declaration public SemVer Marge(SemVer newVersion, bool onlyStable = true) Parameters Type Name Description SemVer newVersion Objects to be merged. マージされるオブジェクト。 System.Boolean onlyStable Whether use only stable version. 安定版のみつかうか。 Returns Type Description SemVer Marged Semantic Versioning. マージされたセマンティックバージョニング。 Exceptions Type Condition System.ArgumentException Thrown when different exist version or no suite version. exist versionが違うときや最適なバージョンがないときにthrowされる。 SortVersion(IEnumerable<String>) Sort the given version in descending order. 与えられたバージョンを降順にソートする。 Declaration public static List<string> SortVersion(IEnumerable<string> versions) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.String > versions Versions to be sorted. ソートされるバージョン。 Returns Type Description System.Collections.Generic.List < System.String > Sorted version ソートされたバージョン ToMathExpression(String) Returns a mathematical representation of given versions. 与えられた許可されたバージョンを数学的表現に直して返す。 Declaration public static string ToMathExpression(string allowedVersion) Parameters Type Name Description System.String allowedVersion Interval notation for specifying version ranges in NuGet. NuGetで用いられるバージョン範囲を指定するために間隔表記。 Returns Type Description System.String Mathematical representation 数学的表現"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.VersionSelectMethod.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.VersionSelectMethod.html",
    "title": "Enum VersionSelectMethod | NuGet importer for Unity documentation",
    "keywords": "Enum VersionSelectMethod Namespace : kumaS.NuGetImporter.Editor.DataClasses Assembly : kumaS.NuGetImporter.Editor.dll Syntax public enum VersionSelectMethod Fields Name Description Highest Lowest Suit"
  },
  "api/kumaS.NuGetImporter.Editor.DependencySolver.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DependencySolver.html",
    "title": "Class DependencySolver | NuGet importer for Unity documentation",
    "keywords": "Class DependencySolver Class that provides a method to resolve package dependencies. 依存関係を解決するメソッドを提供するクラス。 Inheritance System.Object DependencySolver Namespace : kumaS.NuGetImporter.Editor Assembly : kumaS.NuGetImporter.Editor.dll Syntax public static class DependencySolver Methods CheckAllPackage(Boolean, VersionSelectMethod) Declaration public static async Task<List<Package>> CheckAllPackage(bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description System.Boolean onlyStable VersionSelectMethod method Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Package >> FindRemovablePackages(String, Boolean, VersionSelectMethod) Find removable packages when the specified package is removed. 特定のパッケージを除去した際取り除けるパッケージを探す。 Declaration public static async Task<List<Package>> FindRemovablePackages(string removePackageId, bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description System.String removePackageId Remove package. 除去するパッケージ。 System.Boolean onlyStable Whether use only stable version. 安定版のみつかうか。 VersionSelectMethod method Method to select a version. バージョンを選択する方法。 Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Package >> Removable packages. 除去可能なパッケージ。 Exceptions Type Condition System.InvalidOperationException Thrown when dependency conflict occered. 依存関係に衝突があるときthrowされる。 System.ArgumentException Thrown when there is a circular reference or there is no version of package. 循環参照があるときまたはパッケージのバージョンがないときthrowされる。 FindRequiredPackages(String, String, Boolean, VersionSelectMethod) Declaration public static async Task<List<Package>> FindRequiredPackages(string packageId, string version, bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description System.String packageId System.String version System.Boolean onlyStable VersionSelectMethod method Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Package >> FindRequiredPackagesWhenChangeVersion(String, String, Boolean, VersionSelectMethod) Declaration public static async Task<List<Package>> FindRequiredPackagesWhenChangeVersion(string packageId, string version, bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description System.String packageId System.String version System.Boolean onlyStable VersionSelectMethod method Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Package >>"
  },
  "api/kumaS.NuGetImporter.Editor.GUILayoutExtention.html": {
    "href": "api/kumaS.NuGetImporter.Editor.GUILayoutExtention.html",
    "title": "Class GUILayoutExtention | NuGet importer for Unity documentation",
    "keywords": "Class GUILayoutExtention Additional GUILayout 追加(カスタム)のGUILayout Inheritance System.Object GUILayoutExtention Namespace : kumaS.NuGetImporter.Editor Assembly : kumaS.NuGetImporter.Editor.dll Syntax public static class GUILayoutExtention Methods UrlLabel(String, String, Int32, GUIStyle, GUILayoutOption[]) Label for URL. URLのためのラベル。 Declaration public static void UrlLabel(string text, string url, int fontSize = -1, GUIStyle style = null, params GUILayoutOption[] options) Parameters Type Name Description System.String text Shown text. 表示されるテキスト。 System.String url URL to go to when clicked. クリックしたときに飛ぶURL。 System.Int32 fontSize Text font size. If less than 0, this become default. (option) テキストのフォントサイズ。0以下の場合デフォルト値になる。（オプション） UnityEngine.GUIStyle style The style to use. (option) 使用される GUIStyle 。（オプション） UnityEngine.GUILayoutOption [] options An optional list of layout options that specify extra layouting properties. 追加のレイアウトプロパティを指定するレイアウトオプションのオプションリスト。 WrapedLabel(String, Int32, GUIStyle, GUILayoutOption[]) Labels to be automatically wrapped. 自動で改行できるラベル。 Declaration public static void WrapedLabel(string text, int fontSize = -1, GUIStyle style = null, params GUILayoutOption[] options) Parameters Type Name Description System.String text Shown text. 表示されるテキスト。 System.Int32 fontSize Text font size. If less than 0, this become default. (option) テキストのフォントサイズ。0以下の場合デフォルト値になる。（オプション） UnityEngine.GUIStyle style The style to use. (option) 使用される GUIStyle 。（オプション） UnityEngine.GUILayoutOption [] options An optional list of layout options that specify extra layouting properties. 追加のレイアウトプロパティを指定するレイアウトオプションのオプションリスト。"
  },
  "api/kumaS.NuGetImporter.Editor.html": {
    "href": "api/kumaS.NuGetImporter.Editor.html",
    "title": "Namespace kumaS.NuGetImporter.Editor | NuGet importer for Unity documentation",
    "keywords": "Namespace kumaS.NuGetImporter.Editor Classes DependencySolver Class that provides a method to resolve package dependencies. 依存関係を解決するメソッドを提供するクラス。 GUILayoutExtention Additional GUILayout 追加(カスタム)のGUILayout NuGet Class for using NuGet API. NuGetのAPIを使うためのクラス。 NuGetAnalyzerImportSetting Class for configuring Roslyn Analyzer plugins. Roslyn Analyzerの設定をするためのクラス。 NuGetImporterSettings NuGetImporterSettingWindow EditorWindow class to configure settings for NuGet importer. NuGet importerの設定をするエディタウィンドウクラス。 NuGetImporterWindow Main window of NuGet importer. NuGet importerのメインウィンドウ。 NuGetNativeImportSetting Class for configuring native plugins introduced from NuGet. NuGetから導入したネイティブプラグインの設定をするためのクラス。 PackageDataExtentionToGUI Class that provides extend methods to display the package information as a GUI. パッケージの情報をGUIとして表示する拡張メソッドを提供するクラス。 PackageManager Class for managing packages. パッケージを管理するクラス。 PrepareThisAsset Class to prepare to use NuGet importer. NuGet importerを使う準備をするクラス。"
  },
  "api/kumaS.NuGetImporter.Editor.NuGet.html": {
    "href": "api/kumaS.NuGetImporter.Editor.NuGet.html",
    "title": "Class NuGet | NuGet importer for Unity documentation",
    "keywords": "Class NuGet Class for using NuGet API. NuGetのAPIを使うためのクラス。 Inheritance System.Object NuGet Namespace : kumaS.NuGetImporter.Editor Assembly : kumaS.NuGetImporter.Editor.dll Syntax public static class NuGet Methods DeleteCache() Delete the cache of search and catalog. カタログと検索結果のキャッシュを削除する。 Declaration public static void DeleteCache() GetCatalog(String) Get the specified catalog. 指定したカタログを所得する。 Declaration public static async Task<Catalog> GetCatalog(string packageName) Parameters Type Name Description System.String packageName Package name. パッケージの名前。 Returns Type Description System.Threading.Tasks.Task < Catalog > Specified catalog. 指定したカタログ。 GetDownloadingProgress(String) Get the downloaded byte length of the package currently downloading. ダウンロード中のパッケージのダウンロードしたバイト数を取得する。 Declaration public static (long packageSize, long downloadedSize) GetDownloadingProgress(string packageName) Parameters Type Name Description System.String packageName Name of the package. 取得したいパッケージの名前。 Returns Type Description System.ValueTuple < System.Int64 , System.Int64 > Current downloaded byte length. 現在のダウンロードしたバイト数。 Exceptions Type Condition System.ArgumentException Thrown when the given package is not downloading. 与えられたパッケージがダウンロード中でないときthrowされる。 GetPackage(String, String, String) Get the specified package. 指定したパッケージを取得する。 Declaration public static async Task GetPackage(string packageName, string version, string savePath) Parameters Type Name Description System.String packageName Package name. パッケージの名前。 System.String version Version. バージョン。 System.String savePath Destination directory. It will be saved as a .nupkg file in this directory. 保存先のディレクトリ。このディレクトリ内に.nupkgファイルとして保存される。 Returns Type Description System.Threading.Tasks.Task Task InitializeAPIEndPoint() Initialize the API endpoint. APIのエンドポイントを初期化する。 Declaration [InitializeOnLoadMethod] public static async Task InitializeAPIEndPoint() Returns Type Description System.Threading.Tasks.Task Task SearchPackage(String, Int32, Int32, Boolean) Search for packages. パッケージを検索する。 Declaration public static async Task<SearchResult> SearchPackage(string q = \"\", int skip = -1, int take = -1, bool prerelease = false) Parameters Type Name Description System.String q Search word. 検索語句。 System.Int32 skip Number of packages to skip. スキップするパッケージの数。 System.Int32 take Number of packages to take. 取得するパッケージの数。 System.Boolean prerelease Whether include prerelease. プリリリースを含めるか。 Returns Type Description System.Threading.Tasks.Task < SearchResult > Search result. 検索結果。 TryGetDownloadingProgress(String, out Int64, out Int64) Declaration public static bool TryGetDownloadingProgress(string packageName, out long packageSize, out long downloadedSize) Parameters Type Name Description System.String packageName System.Int64 packageSize System.Int64 downloadedSize Returns Type Description System.Boolean"
  },
  "api/kumaS.NuGetImporter.Editor.NuGetAnalyzerImportSetting.html": {
    "href": "api/kumaS.NuGetImporter.Editor.NuGetAnalyzerImportSetting.html",
    "title": "Class NuGetAnalyzerImportSetting | NuGet importer for Unity documentation",
    "keywords": "Class NuGetAnalyzerImportSetting Class for configuring Roslyn Analyzer plugins. Roslyn Analyzerの設定をするためのクラス。 Inheritance System.Object UnityEditor.AssetPostprocessor NuGetAnalyzerImportSetting Namespace : kumaS.NuGetImporter.Editor Assembly : kumaS.NuGetImporter.Editor.dll Syntax public class NuGetAnalyzerImportSetting : AssetPostprocessor Properties HasAnalyzerSupport Declaration public static bool HasAnalyzerSupport { get; } Property Value Type Description System.Boolean"
  },
  "api/kumaS.NuGetImporter.Editor.NuGetImporterSettings.html": {
    "href": "api/kumaS.NuGetImporter.Editor.NuGetImporterSettings.html",
    "title": "Class NuGetImporterSettings | NuGet importer for Unity documentation",
    "keywords": "Class NuGetImporterSettings Inheritance System.Object NuGetImporterSettings Namespace : kumaS.NuGetImporter.Editor Assembly : kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class NuGetImporterSettings Properties AutoPackagePlacementCheck Is package placement checked at startup? 起動時にパッケージの配置をチェックするか。 Declaration public bool AutoPackagePlacementCheck { get; set; } Property Value Type Description System.Boolean CatalogCacheLimit Declaration public int CatalogCacheLimit { get; set; } Property Value Type Description System.Int32 Limit of catalog cache. カタログのキャッシュの最大数。 IconCacheLimit Declaration public int IconCacheLimit { get; set; } Property Value Type Description System.Int32 Limit of icon cache. アイコンのキャッシュの最大数。 InstallMethod Declaration public InstallMethod InstallMethod { get; set; } Property Value Type Description InstallMethod Install method of NuGet package. NuGetパッケージのインストール方法。 Instance Declaration public static NuGetImporterSettings Instance { get; } Property Value Type Description NuGetImporterSettings IsNetworkSavemode A mode that reduces the network connections. ネットワーク接続を少なくするモード。 Declaration public bool IsNetworkSavemode { get; set; } Property Value Type Description System.Boolean Method Declaration public VersionSelectMethod Method { get; set; } Property Value Type Description VersionSelectMethod Method to select a version. バージョンを選択する方法。 OnlyStable Declaration public bool OnlyStable { get; set; } Property Value Type Description System.Boolean Use the stable version only? 安定版のみ使用するか。 RetryLimit How many retries are allowed over a network connection. ネットワーク接続で何回までリトライするか。 Declaration public int RetryLimit { get; set; } Property Value Type Description System.Int32 SearchCacheLimit Declaration public int SearchCacheLimit { get; set; } Property Value Type Description System.Int32 Limit of search cache. 検索のキャッシュの最大数。 Timeout Network timeout time. ネットワークのタイムアウト時間。 Declaration public int Timeout { get; set; } Property Value Type Description System.Int32"
  },
  "api/kumaS.NuGetImporter.Editor.NuGetImporterSettingWindow.html": {
    "href": "api/kumaS.NuGetImporter.Editor.NuGetImporterSettingWindow.html",
    "title": "Class NuGetImporterSettingWindow | NuGet importer for Unity documentation",
    "keywords": "Class NuGetImporterSettingWindow EditorWindow class to configure settings for NuGet importer. NuGet importerの設定をするエディタウィンドウクラス。 Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject UnityEditor.EditorWindow NuGetImporterSettingWindow Namespace : kumaS.NuGetImporter.Editor Assembly : kumaS.NuGetImporter.Editor.dll Syntax public class NuGetImporterSettingWindow : EditorWindow"
  },
  "api/kumaS.NuGetImporter.Editor.NuGetImporterWindow.html": {
    "href": "api/kumaS.NuGetImporter.Editor.NuGetImporterWindow.html",
    "title": "Class NuGetImporterWindow | NuGet importer for Unity documentation",
    "keywords": "Class NuGetImporterWindow Main window of NuGet importer. NuGet importerのメインウィンドウ。 Inheritance System.Object UnityEngine.Object UnityEngine.ScriptableObject UnityEditor.EditorWindow NuGetImporterWindow Namespace : kumaS.NuGetImporter.Editor Assembly : kumaS.NuGetImporter.Editor.dll Syntax public class NuGetImporterWindow : EditorWindow Methods OnGUI() Draw the contents of the Window. ウィンドウの中身を描写。 Declaration public void OnGUI()"
  },
  "api/kumaS.NuGetImporter.Editor.NuGetNativeImportSetting.html": {
    "href": "api/kumaS.NuGetImporter.Editor.NuGetNativeImportSetting.html",
    "title": "Class NuGetNativeImportSetting | NuGet importer for Unity documentation",
    "keywords": "Class NuGetNativeImportSetting Class for configuring native plugins introduced from NuGet. NuGetから導入したネイティブプラグインの設定をするためのクラス。 Inheritance System.Object UnityEditor.AssetPostprocessor NuGetNativeImportSetting Namespace : kumaS.NuGetImporter.Editor Assembly : kumaS.NuGetImporter.Editor.dll Syntax public class NuGetNativeImportSetting : AssetPostprocessor"
  },
  "api/kumaS.NuGetImporter.Editor.PackageDataExtentionToGUI.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageDataExtentionToGUI.html",
    "title": "Class PackageDataExtentionToGUI | NuGet importer for Unity documentation",
    "keywords": "Class PackageDataExtentionToGUI Class that provides extend methods to display the package information as a GUI. パッケージの情報をGUIとして表示する拡張メソッドを提供するクラス。 Inheritance System.Object PackageDataExtentionToGUI Namespace : kumaS.NuGetImporter.Editor Assembly : kumaS.NuGetImporter.Editor.dll Syntax public static class PackageDataExtentionToGUI Methods DeleteCache() Delete icon cache. アイコンのキャッシュを削除する。 Declaration public static void DeleteCache() GetIcon(Catalog, String) Get the icon for this package. このパッケージのアイコンを取得する。 Declaration public static async Task GetIcon(this Catalog data, string installedVersion) Parameters Type Name Description Catalog data Package infomation. パッケージ情報。 System.String installedVersion Returns Type Description System.Threading.Tasks.Task Task GetIcon(Datum) Get the icon for this package. このパッケージのアイコンを取得する。 Declaration public static async Task GetIcon(this Datum data) Parameters Type Name Description Datum data Package infomation. パッケージ情報。 Returns Type Description System.Threading.Tasks.Task Task"
  },
  "api/kumaS.NuGetImporter.Editor.PackageManager.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageManager.html",
    "title": "Class PackageManager | NuGet importer for Unity documentation",
    "keywords": "Class PackageManager Class for managing packages. パッケージを管理するクラス。 Inheritance System.Object PackageManager Namespace : kumaS.NuGetImporter.Editor Assembly : kumaS.NuGetImporter.Editor.dll Syntax public static class PackageManager Properties DataPath Thread-safe Application.dataPath. スレッドセーフなApplication.dataPath。 Declaration public static string DataPath { get; } Property Value Type Description System.String Methods Boot() Declaration [InitializeOnLoadMethod] public static async Task Boot() Returns Type Description System.Threading.Tasks.Task ChangePackageVersionAsync(String, String, Boolean, VersionSelectMethod) Declaration public static Task<OperationResult> ChangePackageVersionAsync(string packageId, string newVersion, bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description System.String packageId System.String newVersion System.Boolean onlyStable VersionSelectMethod method Returns Type Description System.Threading.Tasks.Task < OperationResult > ConvertToAssets() Declaration public static async Task<bool> ConvertToAssets() Returns Type Description System.Threading.Tasks.Task < System.Boolean > ConvertToUPM() Declaration public static async Task<bool> ConvertToUPM() Returns Type Description System.Threading.Tasks.Task < System.Boolean > FixPackageAsync(String, Boolean) Repair the specified package. 指定されたパッケージを修復する。 Declaration public static Task<OperationResult> FixPackageAsync(string packageId, bool confirm = true) Parameters Type Name Description System.String packageId Package id. パッケージのid。 System.Boolean confirm Confirm to user. 確認を行うか。 Returns Type Description System.Threading.Tasks.Task < OperationResult > Operation result. 操作結果。 FixPackagesAsync(Boolean) Fix as follows in package.config. package.configの通りに修復する。 Declaration public static Task<OperationResult> FixPackagesAsync(bool confirm = true) Parameters Type Name Description System.Boolean confirm Confirm to user. 確認を行うか。 Returns Type Description System.Threading.Tasks.Task < OperationResult > Operation result. 操作結果。 InstallPackageAsync(String, String, Boolean, VersionSelectMethod) Declaration public static Task<OperationResult> InstallPackageAsync(string packageId, string version, bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description System.String packageId System.String version System.Boolean onlyStable VersionSelectMethod method Returns Type Description System.Threading.Tasks.Task < OperationResult > IsNeedToFix() Check that the packages listed in package.config are installed. package.configに記載されているパッケージがインストールされているか確認する。 Declaration public static async Task<bool> IsNeedToFix() Returns Type Description System.Threading.Tasks.Task < System.Boolean > Is need to fix? 全てインストールされておらず修復の必要があるか。 Load() Load the package installation information. パッケージのインストール情報を読み込む。 Declaration public static void Load() Save() Save the package installation information. パッケージのインストール情報を保存する。 Declaration public static void Save() UninstallPackagesAsync(String, Boolean, VersionSelectMethod) Declaration public static Task<OperationResult> UninstallPackagesAsync(string packageId, bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description System.String packageId System.Boolean onlyStable VersionSelectMethod method Returns Type Description System.Threading.Tasks.Task < OperationResult >"
  },
  "api/kumaS.NuGetImporter.Editor.PrepareThisAsset.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PrepareThisAsset.html",
    "title": "Class PrepareThisAsset | NuGet importer for Unity documentation",
    "keywords": "Class PrepareThisAsset Class to prepare to use NuGet importer. NuGet importerを使う準備をするクラス。 Inheritance System.Object UnityEditor.AssetPostprocessor PrepareThisAsset Namespace : kumaS.NuGetImporter.Editor Assembly : kumaS.NuGetImporter.Editor.dll Syntax public class PrepareThisAsset : AssetPostprocessor"
  },
  "documentation/codingConventions.html": {
    "href": "documentation/codingConventions.html",
    "title": "Cording Conventions | NuGet importer for Unity documentation",
    "keywords": "Cording Conventions This project follows Microsoft's Framework Design Guidelines or C# Coding Conventions . I also define the code style used in this project in NuGetImporterForUnity/.editorconfig . If you clean up your code with this setting, you are fine as for the code style. (Please let me know if there's any part of the code style I'm not following.) Naming Guidelines The camel casing convention, used only for parameter names, capitalizes the first character of each word except the first word. The PascalCasing convention, used for all identifiers except parameter names, capitalizes the first character of each word (including acronyms over two letters in length). Choose easily readable identifier names, and DO NOT use abbreviations or contractions as part of identifier names. For more infomation, see Naming Guidelines - Microsoft . Layout Conventions Use the default Code Editor settings (smart indenting, four-character indents, tabs saved as spaces). Write only one statement per line. Write only one declaration per line. If continuation lines are not indented automatically, indent them one tab stop (four spaces). Add at least one blank line between method definitions and property definitions. Commenting Conventions Place the comment on a separate line, not at the end of a line of code. Begin comment text with an uppercase letter. End comment text with a period (except for a single noun). Implicitly Typed Variables Use implicit typing for local variables when the variable type is obvious from the right side of the assignment or when the precise type is unimportant. Do not use var when the type is not apparent from the right side of the assignment. Use implicit typing to determine the type of the loop variable in for loops. Do not use implicit typing to determine the type of the loop variable in foreach loops. using directive We must write the using directives outside of the namespace (basically at the top of the file). The order of using directives is as follows, and we should separate each group by one line. System other For example using System; using System.Collections.Generic; using System.Linq; using kumaS.NuGetImporter.Editor.DataClasses; using UnityEditor; using UnityEngine;"
  },
  "documentation/contributing.html": {
    "href": "documentation/contributing.html",
    "title": "Contribution guide | NuGet importer for Unity documentation",
    "keywords": "Contribution guide Thank you for being so interested about contribution! Let's make this project even better. Find a bug First, check for similar bugs in Issue . If not, open the Issue based on the template. Then, if I identify it as a bug , I will label it. If you want to fix a bug, please refer to the Open pull request before starting to fix it. Documentation Issue First, check for similar documentation issues in Issue . If not, open the Issue based on the template. For documentation, I will fix it, so please wait until it is applied. Have a question about usage or specifications First, check for a similar question in Issue . If not, open the Issue based on the template. Then, I'll reply to it. Have an enhancement idea First, check for a similar idea in Issue . If not, open the Issue based on the template. Discuss the enhancement idea of an open issue. You can (or should) implement it yourself, but please refer to the Open pull request before creating. Open pull request First, you fork this repository. Next, you write a code that follows the Coding Conventions . Then, after you write a code, open the pull request based on the template. Then, we will merge it as soon as it passes the test and our review."
  },
  "documentation/usage.html": {
    "href": "documentation/usage.html",
    "title": "Usage | NuGet importer for Unity documentation",
    "keywords": "Usage Getting Start There are two ways to install the package: using the UPM (Unity Package Manager) or importing the .unitypackage. via UPM (Unity Package Manager) There are two ways to install using UPM: this Git URL or OpenUPM. Use This Git URL Open the Package Manager window. Click the add (+) button in the status bar. Select Add package from git URL . Enter \" https://github.com/kumaS-nu/NuGet-importer-for-Unity.git?path=NuGetImporterForUnity/Packages/NuGet Importer \" or \" git@github.com:kumaS-nu/NuGet-importer-for-Unity.git?path=NuGetImporterForUnity/Packages/NuGet Importer \". Click Add . For more information, see the Official page (Installing from a Git URL - Unity) . Use OpenUPM If you have not installed OpenUPM-CLI, run the following command to install OpenUPM-CLI. (Node.js 12 is required.) npm install -g openupm-cli Go to the unity project folder Run the following command to install \"NuGet importer for Unity\" in your project. openupm add org.kumas.nuget-importer For more information, see the Official page (Getting Started with OpenUPM-CLI - OpenUPM) via .unitypackage Go to the release page and download the zip file of the version you need. Extract the zip file and import the .unitypackage into your project. Configure of .gitignore You may want to keep installed packages out of git's tracking. In that case, you can add the following to .gitignore . NuGet-importer-for-Unity manages the list of installed packages in Asset/package.config , and you can restore packages by sharing this file. # NuGet importer /[Aa]ssets/[Pp]ackages.meta /[Aa]ssets/[Pp]ackages/ /[Nn]u[Gg]et/ /[Pp]ackages/*/ !/[Pp]ackages/your embedded package to share with git/ Usage in Unity Menu item Manage packages ・・・ Open the main window for managing packages. Repair packages ・・・ Optimize the dependencies of installed packages and repair them. Delete cache ・・・ Delete the cache. (However, the cache is deleted every time the assembly is loaded.) Clean up this plugin ・・・ Delete all packages and initialize this plugin. NuGet importer settings ・・・ Open the window for configuring settings with NuGet importer. Check update ・・・ Check for updates. Go to the project page ・・・ Open the \"NuGet importer for Unity\" web page. Main window Mode to search from NuGet. Mode to search from the installed packages. Include the development version or not. Input area for search words. (Incremental search.) Search results. Package details. Version selection. Operations on the package. NuGet importer settings Specify the installation location. （We recommend using UPM.) Specify the method for determining the package version when solving dependency. (We recommend setting Suit.) Specifies whether check the package is installed at startup. If the package directory exists, NuGet-importer-for-Unity determines as the package is already installed in the project. If NuGet-importer-for-Unity finds missing packages, automatically install them. ( We recommend turning it on.) The maximum number of search results to cache. (0 or less is not cached.) The maximum number of catalogs to cache. (0 or less is not cached.) The maximum number of icons to cache. (0 or less is not cached.) Reduce the amount of data in the communication or not. If on, images of packages not installed in the project will not fetch, and NuGet-importer-for-Unity will not perform package searches until the input has settled. The maximum number of retry attempts to get data when data fetch fails. Time out seconds of communication. Note NuGet-importer-for-Unity install files not required at runtime (e.g., rulesets, documentation, etc.) are installed to (your project)/NuGet . If you want to reference them, add them reference manually. When importing this package into your project, this package makes the following changes. Turn off PlayerSettings -> assemblyVersionValidation . (To make Unity not check the assembly version as NuGet does.) Add reference System.IO.Compression.FileSystem.dll . (NuGet importer for Unity handles Zip files.)"
  },
  "documentation_jp/codingConventions.html": {
    "href": "documentation_jp/codingConventions.html",
    "title": "コーディング規則 | NuGet importer for Unity documentation",
    "keywords": "コーディング規則 基本的に Microsoft の フレームワークデザインのガイドライン または C# のコーディング規則 に則っています。また、 NuGetImporterForUnity/.editorconfig にてこのプロジェクトで使用するコードスタイルを定義しており、この設定でコードのクリーンアップをすれば基本的には問題ありません。（守れてないところがあったら突っ込んでください） 命名 パラメーターは Camel 記法（先頭小文字、それ以外の単語の先頭が大文字）とし、それ以外は Pascal 記法（全ての単語の先頭を大文字）としてください。命名は、読みやすい英語で短縮形を使用しないでください。 詳細は、 名前付けのガイドライン - Microsoft を参照してください。（といっても 日本語の翻訳がガバガバなので 英語版 の方が正確） レイアウト コード エディターの既定の設定（スマートインデント、4 文字インデント、タブを空白として保存）を使用します。 1つの行には1つのステートメントのみを記述します。 1つの行には1つの宣言のみを記述します。 継続行にインデントが自動的に設定されない場合は1タブストップ（4つの空白）分のインデントを設定します。 メソッド定義とプロパティ定義の間に少なくとも1行の空白行を追加します。 コメント規則 コメントは、コード行の末尾ではなく別の行に記述します。 コメントのテキストは大文字で開始します。 コメントのテキストは（名詞一個の場合を除き）ピリオドで終了します。 変数宣言 変数の型が割り当ての右側から明らかである場合、または厳密な型が重要でない場合は、ローカル変数の暗黙の型指定を使用します。 割り当ての右側から型が明らかではない場合、var を使用しません。 for ループでループ変数の型を決定するときは、暗黙の型指定を使用します。 foreach ループでループ変数の型を決定するときは、暗黙の型指定を使用しません。 usingディレクティブ usingディレクティブは namespace の外側（基本的にはファイルの先頭）に書きます。また、usingディレクティブの順番は以下の通りとし、各グループは1行づつ開けます。 System その他 例えば、以下のようになります。 using System; using System.Collections.Generic; using System.Linq; using kumaS.NuGetImporter.Editor.DataClasses; using UnityEditor; using UnityEngine;"
  },
  "documentation_jp/contributing.html": {
    "href": "documentation_jp/contributing.html",
    "title": "コントリビューションガイド | NuGet importer for Unity documentation",
    "keywords": "コントリビューションガイド コントリビューションに興味を持ってくれてありがとう！このプロジェクトをよりよいものにしていきましょう。 バグを発見した まずは、同じようなバグが Issue にないか探しましょう。もしなければ、テンプレートを元に（私は英語よわよわなので日本語で書いてくれると嬉しい）Issue を開きます。 その後、私がバグだと判定したら bug のラベルをつけます。 修正をつくる場合は、作り始める前に プルリクエストを開く を参照してください。 ドキュメントにおかしいところがある まずは、同じような指摘が Issue にないか探しましょう。もしなければ、テンプレートを元に（私は英語よわよわなので日本語で書いてくれると嬉しい）Issue を開きます。 ドキュメントに関しては私が修正するので反映されるまでお待ちください。 使い方とか仕様に関して質問がある まずは、同じような質問が Issue にないか探しましょう。もしなければ、テンプレートを元に（私は英語よわよわなので日本語で書いてくれると嬉しい）Issue を開きます。 そのうち答えます。 改善案がある まずは、同じような改善案が Issue にないか探しましょう。もしなければ、テンプレートを元に（私は英語よわよわなので日本語で書いてくれると嬉しい）Issue を開きます。 開かれた Issue の改善案に対して議論をします。自前で実装してもいい（というより推奨）ですが、機能を作る前に プルリクエストを開く を参照してください。 プルリクエストを開く まず最初に、このリポジトリをフォークしてください。次に、 コーディング規則 を守り機能を作ってください。機能が完成したら、テンプレートを元にプルリクエストを開いてください。テスト・私のレビューが通り次第マージされます。"
  },
  "documentation_jp/usage.html": {
    "href": "documentation_jp/usage.html",
    "title": "使い方 | NuGet importer for Unity documentation",
    "keywords": "使い方 インストール方法 パッケージをインストールするには、UPM (Unity Package Manager) を利用する、または、.unitypackage をインポートするの二通りがあります。 UPM (Unity Package Manager) を使う UPMを使って導入するには、この Git URL を指定する。または、OpenUPM を使って導入するという二通りあります。 Git URL を指定する Package Manager ウィンドウを開く ステータスバーの Add (+) ボタンをクリック Add package from git URL を選択 「 https://github.com/kumaS-nu/NuGet-importer-for-Unity.git?path=NuGetImporterForUnity/Packages/NuGet Importer 」または「 git@github.com:kumaS-nu/NuGet-importer-for-Unity.git?path=NuGetImporterForUnity/Packages/NuGet Importer 」を入力 Add をクリック 詳細は 公式ページ(Git URL からのインストール - Unity) をご覧ください。 OpenUPM を利用する OpenUPM-CLI をインストールしていない場合は、以下のコマンドで OpenUPM-CLI をインストールする。(Node.js 12が必要です。) npm install -g openupm-cli インストールする予定のプロジェクトのフォルダへ移動する。 以下のコマンドで、プロジェクトにインストールする。 openupm add org.kumas.nuget-importer 詳細は 公式ページ(Getting Started with OpenUPM-CLI - OpenUPM) をご覧ください。 .unitypackage で導入する リリースページ へ行き、必要なバージョンのzipファイルをダウンロードする。 zipファイルを解凍し、中の .unitypackage をプロジェクトにインポートする。 .gitignoreの設定 インストールしたパッケージは Git の監理外にしたいと思います。その場合は、 .gitignore に以下を追加してください。インストールしたパッケージ一覧は Asset/package.config で管理され、このファイルを共有すればパッケージの復元ができます。 # NuGet importer /[Aa]ssets/[Pp]ackages.meta /[Aa]ssets/[Pp]ackages/ /[Nn]u[Gg]et/ /[Pp]ackages/*/ !/[Pp]ackages/your embedded package to share with git/ Unityでの使い方 メニューアイテム Manage packages ・・・ パッケージを管理するメインウィンドウを表示する。 Repair packages ・・・ インストールされていないパッケージを修復する。 Delete cache ・・・ キャッシュを削除する。（ただし、アセンブリがロードされるたびにキャッシュは消える。） Clean up this plugin ・・・ パッケージを全削除し、このプラグインを初期化する。 NuGet importer settings ・・・ NuGet importer に関する設定をするウィンドウを表示する。 Check update ・・・ 更新があるか確認する。 Go to project page ・・・ NuGet importer for Unity の Web ページを開く。 メインウィンドウ NuGet から検索するときのモード。 インストールされているものから検索するときのモード。 非安定版も含めるかどうか。 検索語句の入力場所。（インクリメンタルサーチされる。） 検索結果。 パッケージの詳細情報。 バージョン選択。 パッケージに対する操作。 NuGet importer の設定 インストール先を指定する。（UPMを推奨。） 依存関係のバージョン決定方法を指定する。（Suitを推奨。） 起動時にパッケージがインストールされているか確認するか。パッケージのディレクトリが存在すればインストール済みと判断。インストールされていないパッケージを見つけた場合、自動的に修復する。（オンを推奨。） 検索結果のキャッシュする最大数。（0以下はキャッシュしない。） カタログのキャッシュする最大数。（0以下はキャッシュしない。） アイコンのキャッシュする最大数。（0以下はキャッシュしない。） 通信のデータ量を少なくするモードか。オンの場合、インストールされていないパッケージの画像が取得されなくなり、入力が落ち着くまでパッケージ検索が行われなくなります。 通信失敗時に再度通信を試みる最大数。 通信のタイムアウトとする秒数。 注意点 実行時に必要なファイル以外（例：ルールセットやドキュメントなど）は (your project)/NuGet 以下に配置されます。参照する際は手動で追加してください。 このパッケージを導入する際、以下の変更を加えます。 PlayerSettings -> assemblyVersionValidation をオフに。（NuGet と同様にアセンブリ参照のバージョンの同一性をチェックしなくさせるため。） System.IO.Compression.FileSystem.dll を参照に追加。（NuGet importer for Unity が Zip ファイルを扱うため。）"
  },
  "index.html": {
    "href": "index.html",
    "title": "English | NuGet importer for Unity documentation",
    "keywords": "English Welcome to NuGet importer for Unity \"NuGet importer for Unity\" is a fast, easy-to-use, and powerful editor extension that provides you to import NuGet packages into Unity. This package also fully supports native plugins. (This was inspired by GlitchEnzo/NuGetForUnity , but made from scratch.) 日本語はこちら。 Usage For information on how to install and use this package, please see [usage].(documentation/usage.html). Environment This works with Unity2020 and later. This even works with Unity2019, but it is not recommended due to some specification issues. API The API documentation is available here . Contributing We welcome any contributions (bug reports, desired features). If you wish to contribute, be sure to review our Contribution guide License This package is under Apache License 2.0 . Each package in NuGet is governed by the terms included with the package. For more details, see NuGet F&Q . Author kumaS (If I cannot use this name because it is used, add -nu as a tag.) Twitter 日本語 Welcome to NuGet importer for Unity NuGet importer for Unity は高速で使いやすく、非常に強力に NuGet のパッケージを Unity へ導入できるようにするエディタ拡張です。 また、ネイティブプラグインに対しても完全に対応しております。 （ GlitchEnzo/NuGetForUnity に影響を受けましたが一から作ってます。） 使い方 このパッケージの導入法や使い方に関しては、 使い方 をご覧ください。 動作環境 Unity2020以降であれば動きます。Unity2019でも動作しますが、仕様上の問題より推奨しません。 API APIのドキュメントは こちら にあります。ご活用ください。 コントリビュート どんなコントリビュート（バグ報告やほしい機能）でもしていただけるとありがたいです。具体的なやり方は コントリビューションガイド をご覧ください。 ライセンス これについては、 Apache License 2.0 です。 NuGet のパッケージについてはそれぞれのライセンスに従います。詳細は NuGet の F&Q をご覧ください。 製作者 kumaS (名前が被って使えないときはタグとして -nu をつけてる。) Twitter"
  }
}